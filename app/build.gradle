apply plugin: 'com.android.application'
// Jacoco config
apply plugin: 'jacoco'


android {
    compileSdkVersion 22
    buildToolsVersion '23.0.3'
    defaultConfig {
        applicationId 'com.tarambola.vigiego'
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled false
        }
    }
    lintOptions {
        // I prefer avoiding a build fail if there is any warning, for they are only warnings
        abortOnError false
    }
    productFlavors {
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':blutaglibrary-1.6.5')
    compile files('libs/mpandroidchartlibrary-2-2-4.jar')
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.google.android.gms:play-services-appindexing:8.1.0'
    compile 'com.android.support:support-v4:22.2.1'
}

jacoco {
    // Use this version for upper ones are broken (with Gradle)
    // https://github.com/jacoco/jacoco/issues/288
    toolVersion = "0.7.1.201405082137"
}

// Edit covered scope if needed
// For my part I like having the coverage of both application and tests
def coverageSourceDirs = [
        '../app/src'
]

task jacocoTestReport(type: JacocoReport, dependsOn: "test") {
    group = "Reporting"

    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: '../app/build/intermediates/classes',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('../app/build/jacoco/testUnitTestDebug.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }
}
